/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.dairysuite.bootstrap.api;

import com.dairysuite.bootstrap.model.Customer;
import com.dairysuite.bootstrap.model.CustomerList;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-11-19T01:38:29.186+05:30")

@Api(value = "getCustomerDetails", description = "the getCustomerDetails API")
public interface GetCustomerDetailsApi {

    @ApiOperation(value = "Find customer by ID", nickname = "getCustomerById", notes = "Returns a customer details", response = CustomerList.class, authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "master", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CustomerList.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Customer not found") })
    @RequestMapping(value = "/getCustomerDetails/{cusId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CustomerList> getCustomerById(@ApiParam(value = "ID of customer",required=true) @PathVariable("cusId") Integer cusId);


    @ApiOperation(value = "Get all customers", nickname = "getCustomers", notes = "Returns a customer details", response = CustomerList.class, tags={ "master", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = CustomerList.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Customer not found") })
    @RequestMapping(value = "/getCustomerDetails",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<CustomerList> getCustomers();

}